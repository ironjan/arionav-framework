// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'

    ext {
        // library and sample app version
        // uses semantic versioning: http://semver.org/
        // only change _after_ merge requests
        versionMajor = 0    // incompatible API changes
        versionMinor = 2    // added functionality in a backwards-compatible manner
        versionPatch = 2    // backwards-compatible bug fixes
        versionBuild = 0    // bump for dogfood builds, public betas, etc.

        // dependency versions
        android_arch_lifecycle_version = '1.1.1'
        android_maven_gradle_plugin_version = '2.1'
        androidx_junit_version = '1.1.1'
        androidx_legacy_support_v4_version = '1.0.0'
        androidx_lifecycle_version = '2.2.0'
        androidx_navigation_version = '2.2.2'
        appcompat_version = '1.1.0'
        arcore_version = '1.16.0'
        arcore_location_version = '1.2'
        arrow_kt_version = '0.10.4'
        buildtools_version = '29.0.3'
        constraintlayout_version = '1.1.3'
        core_ktx_version = '1.2.0'
        dagger_version = '2.26'
        espresso_version = '3.2.0'
        junit_version = '4.12'
        kotlin_version = '1.3.50'
        vtm_version = '0.13.0'
        gradle_tools_version = '3.6.3'
        graphhopper_level_extension_version = '1.0-pre20-gh-006'
        kotlin_reflect_version = '1.3.61'
        material_version = '1.1.0'
        sceneform_ux_version = '1.15.0'
        slf4j_handroid_version = '1.7.27'


        // do not change manually
        arionavVersionCode = versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        arionavVersionName = (versionBuild == 0) ?
                "${versionMajor}.${versionMinor}.${versionPatch}"
                : "${versionMajor}.${versionMinor}.${versionPatch}-${versionBuild}"

    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_tools_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.github.dcendents:android-maven-gradle-plugin:$android_maven_gradle_plugin_version"
        classpath "com.google.ar.sceneform.ux:sceneform-ux:$sceneform_ux_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$androidx_navigation_version"

    }
}

allprojects {
    repositories {
        google()
        maven { url 'https://repo.osgeo.org/repository/release/' }
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
        maven { url 'https://jitpack.io' }
    }

    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

subprojects {
    // based on https://stackoverflow.com/a/25149514
    afterEvaluate {
        if (getPlugins().hasPlugin('android') ||
                getPlugins().hasPlugin('android-library')) {

            println name // for debugging

            configure(android.lintOptions) {
                lintConfig file("./lint.xml")
            }
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
